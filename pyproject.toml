[build-system]
requires = ["setuptools", "cmake", "wheel", "setuptools-scm"]
build-backend = "backend"
backend-path = ["_custom_build"]

[project]
name = "perth"
dynamic = ["version"]
description = "Perth Tidal Predictor"
readme = "README.md"
requires-python = ">=3.12"
license = "BSD-3-Clause"
authors = [
  { name = "fbriol@gmail.com" }
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Topic :: Scientific/Engineering :: Physics",
  "Operating System :: POSIX",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: C++"
]
dependencies = [
  "netCDF4",
  "numpy",
]
[project.optional-dependencies]
testing = [
  "pytest>=6.0",
]
[project.urls]
Repository = "https://github.com/fbriol/perth5_cxx"

[tool.ruff]
target-version = "py312"
line-length = 80

[tool.ruff.lint.pycodestyle]
max-line-length = 80

[tool.ruff.lint]
ignore = ["C901", "E501", "E741", "F402", "F823" ]
select = [
  "F",      # pyflakes
  "E",      # pycodestyle errors
  "W",      # pycodestyle warnings
  "YTT",    # flake8-2020
  "B",      # flake8-bugbear
  "T10",    # flake8-debugger
  "INT",    # flake8-gettext
  "PL",     # pylint
  "PT",     # flake8-pytest-style
  "PIE",    # misc lints
  "PYI",    # flake8-pyi
  "TCH",    # type-checking imports
  "C4",     # comprehensions
  "PGH",    # pygrep-hooks
  "RUF",    # Ruff-specific rules
  "S102",   # flake8-bandit: exec-builtin
  "NPY002", # numpy-legacy-random
  "PERF",   # Perflint
  "FLY",    # flynt
  "G",      # flake8-logging-format
  "FA",     # flake8-future-annotations
  "SLOT",   # flake8-slots
  "RSE"     # flake8-raise
]
[tool.ruff.lint.per-file-ignores]

[tool.ruff.lint.isort]
lines-after-imports = 2
known-first-party = ["bang_core"]
split-on-trailing-comma = false

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
docstring-code-format = true

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
junit_suite_name = "PyBind"
junit_family = "xunit1"
minversion = "3.0"
norecursedirs = "third_party"
testpaths = "tests"
addopts = "--import-mode=importlib"

[tool.isort]
combine_as_imports = true
force_grid_wrap = 0
force_sort_within_sections = true
force_to_top = "typing"
include_trailing_comma = true
line_length = 80
multi_line_output = 3
src_paths = ["src/perth"]
